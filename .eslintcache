[{"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/index.js":"1","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/App.js":"2","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Login.js":"3","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/spotify.js":"4","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/reportWebVitals.js":"5","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/reducer.js":"6","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/DataLayer.js":"7","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Player.js":"8","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Sidebar.js":"9","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Body.js":"10","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Footer.js":"11","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/SidebarOption.js":"12","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Header.js":"13","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/SongRow.js":"14","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/SoundLayer.js":"15"},{"size":670,"mtime":1608274904190,"results":"16","hashOfConfig":"17"},{"size":1486,"mtime":1608716495141,"results":"18","hashOfConfig":"17"},{"size":339,"mtime":1608356512103,"results":"19","hashOfConfig":"17"},{"size":800,"mtime":1608238734996,"results":"20","hashOfConfig":"17"},{"size":362,"mtime":1608223753195,"results":"21","hashOfConfig":"17"},{"size":1587,"mtime":1608803150296,"results":"22","hashOfConfig":"17"},{"size":471,"mtime":1608293872168,"results":"23","hashOfConfig":"17"},{"size":421,"mtime":1608373584886,"results":"24","hashOfConfig":"17"},{"size":1094,"mtime":1608367962414,"results":"25","hashOfConfig":"17"},{"size":2420,"mtime":1608893653790,"results":"26","hashOfConfig":"17"},{"size":5413,"mtime":1608892789642,"results":"27","hashOfConfig":"17"},{"size":1033,"mtime":1608808582286,"results":"28","hashOfConfig":"17"},{"size":824,"mtime":1608752280522,"results":"29","hashOfConfig":"17"},{"size":1468,"mtime":1608825781136,"results":"30","hashOfConfig":"17"},{"size":389,"mtime":1608893876620,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xzzlta",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/index.js",[],["72","73"],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/App.js",["74"],"import { useEffect } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenfromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify  = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenfromUrl();\n    window.location.hash = \"\"\n    const _token = hash.access_token;\n\n    if(_token){\n\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      \n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then((user) =>{\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) =>{\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        })\n      });\n\n      spotify.getPlaylist('37i9dQZF1DX5nzJu5E8s8B').then(response =>{\n        dispatch({\n          type:'SET_DISCOVER_WEEKLY',\n          discover_weekly: response\n\n        })\n      })\n    };\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return (\n    <div className=\"app\">\n      {/* if there is ayoken render the player screen and if  not then renderv the login page */}\n      {\n        token ? (\n          <Player spotify={spotify}/>\n        ): (\n          <Login />\n        )\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Login.js",[],["75","76"],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/spotify.js",[],["77","78"],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/reportWebVitals.js",[],["79","80"],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/reducer.js",[],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/DataLayer.js",[],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Player.js",[],["81","82"],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Sidebar.js",["83"],"import React from 'react'\nimport './Sidebar.css';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport SidebarOption from './SidebarOption'\nimport { useDataLayerValue } from './DataLayer';\n\n\n\nfunction Sidebar() {\n    const [{ playlists }, dispatch] = useDataLayerValue();\n \n    return (\n        <div className=\"sidebar\">\n            <img\n                className=\"sidebar__logo\" \n                src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"logo\"\n            />\n            <SidebarOption Icon={ HomeIcon } title=\"Home\"/>\n            <SidebarOption Icon={ SearchIcon } title=\"Search\"/>\n            <SidebarOption Icon={ LibraryMusicIcon } title=\"Your Library\"/>\n\n            <br/>\n            <strong className=\"sidebar__title\">PLAYLIST</strong>\n            <hr />\n            { playlists?.items?.map(playlists =>(\n                <SidebarOption title={ playlists.name} /> \n            ))}\n        </div>\n    )\n}\n\nexport default Sidebar\n",["84","85"],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Body.js",[],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Footer.js",[],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/SidebarOption.js",[],"/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/Header.js",["86"],"import React from 'react'\nimport \"./Header.css\"\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Avatar } from '@material-ui/core';\nimport { useDataLayerValue } from './DataLayer';\n\n\nfunction Header() {\n    const [{ user }, dispatch] = useDataLayerValue();\n\n    return (\n        <div className=\"header\">\n            <div className=\"header__left\">\n                <SearchIcon />\n                <input \n                    placeholder=\"Search for artist and songs\"\n                    type=\"text\"\n                />\n            </div>\n            <div className=\"header__right\">\n                <Avatar src={ user?.images[0]?.url} alt={user?.display_name} />\n                {/* optional chainign */}\n                <h4>{ user?.display_name}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/SongRow.js",["87"],"import React from 'react'\nimport { useDataLayerValue } from './DataLayer'\nimport './SongRow.css'\nimport { useSoundLayerValue } from './SoundLayer';\n\nfunction SongRow( { track} ) {\n    const [{},dispatch] = useDataLayerValue();\n    const [{playing, repeat}, soundDispatch] = useSoundLayerValue\n\n    const changeTrack = (e, track)=>{\n        dispatch({\n            type: \"SET_TRACK\",\n            track: track\n        });\n\n        let wasPlaying = playing;\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: false,\n        });\n        let audio = new Audio(track.preview_url);\n        audio.loop = repeat;\n        soundDispatch({\n            type: \"SET_AUDIO\",\n            audio: audio\n        });\n        if(wasPlaying){\n            soundDispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n\n        }\n\n        document.title = `${ track.name } . ${ track.artists.map((artist) => artist.name).join(\", \")}` \n    }\n\n    return (\n        <div className=\"songRow\" onClick={(e) =>changeTrack(e, track)}>\n\n            <img  className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\n            <div className=\"songRow__info\">\n                <h1>{ track.name }</h1>\n                <p>\n                    { track.artists.map((artist) => artist.name).join(\" ,\")} \n                </p>\n\n                <p>{ track.album.name }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default SongRow\n","/home/solitaire/Desktop/Projects/ReactProjects/spotify-clone/src/SoundLayer.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":12,"column":12,"nodeType":"94","messageId":"95","endLine":12,"endColumn":16},{"ruleId":"88","replacedBy":"96"},{"ruleId":"90","replacedBy":"97"},{"ruleId":"88","replacedBy":"98"},{"ruleId":"90","replacedBy":"99"},{"ruleId":"88","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},{"ruleId":"88","replacedBy":"102"},{"ruleId":"90","replacedBy":"103"},{"ruleId":"92","severity":1,"message":"104","line":12,"column":27,"nodeType":"94","messageId":"95","endLine":12,"endColumn":35},{"ruleId":"88","replacedBy":"105"},{"ruleId":"90","replacedBy":"106"},{"ruleId":"92","severity":1,"message":"104","line":9,"column":22,"nodeType":"94","messageId":"95","endLine":9,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":7,"column":12,"nodeType":"109","messageId":"110","endLine":7,"endColumn":14},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["111"],["112"],["111"],["112"],["111"],["112"],["111"],["112"],"'dispatch' is assigned a value but never used.",["111"],["112"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]